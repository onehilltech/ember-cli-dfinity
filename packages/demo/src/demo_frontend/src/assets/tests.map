{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","demo-frontend/tests/integration/components/demo/hello-test.js","demo-frontend/tests/test-helper.js","demo-frontend/tests/unit/controllers/main/index-test.js","demo-frontend/tests/unit/routes/main-test.js","demo-frontend/tests/unit/routes/main/details-test.js","demo-frontend/tests/unit/routes/main/index-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"demo-frontend/tests/integration/components/demo/hello-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | demo/hello', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Demo::Hello />\n      */\n      {\n        \"id\": \"G9wdwZn8\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"demo/hello\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(this.element).hasText('');\n\n      // Template block usage:\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Demo::Hello>\n              template block text\n            </Demo::Hello>\n          \n      */\n      {\n        \"id\": \"XZGg9+eM\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        template block text\\\\n      \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"demo/hello\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(this.element).hasText('template block text');\n    });\n  });\n});","define(\"demo-frontend/tests/test-helper\", [\"demo-frontend/app\", \"demo-frontend/config/environment\", \"qunit\", \"@ember/test-helpers\", \"qunit-dom\", \"ember-qunit\"], function (_app, _environment, QUnit, _testHelpers, _qunitDom, _emberQunit) {\n  \"use strict\";\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _qunitDom.setup)(QUnit.assert);\n  (0, _emberQunit.start)();\n});","define(\"demo-frontend/tests/unit/controllers/main/index-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Controller | main/index', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n\n    // TODO: Replace this with your real tests.\n    (0, _qunit.test)('it exists', function (assert) {\n      let controller = this.owner.lookup('controller:main/index');\n      assert.ok(controller);\n    });\n  });\n});","define(\"demo-frontend/tests/unit/routes/main-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | main', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:main');\n      assert.ok(route);\n    });\n  });\n});","define(\"demo-frontend/tests/unit/routes/main/details-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | main/details', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:main/details');\n      assert.ok(route);\n    });\n  });\n});","define(\"demo-frontend/tests/unit/routes/main/index-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | main/index', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:main/index');\n      assert.ok(route);\n    });\n  });\n});","define('demo-frontend/config/environment', [], function() {\n  var prefix = 'demo-frontend';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('demo-frontend/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}